
<<TableOfContents()>>



= #P - Sharp-P =

== Comments ==

The class of function problems of the form "compute f(x)," where f is the number of accepting paths of an NP machine.

The canonical #P-complete problem is #SAT: given a Boolean formula, compute how many satisfying assignments it has.

Defined in [Val79], where it was also shown that the problem of counting the number of perfect matchings in a bipartite graph (or equivalently, computing the permanent of a 0-1 matrix) is #P-complete.

What makes that interesting is that the associated decision problem (whether a bipartite graph has a perfect matching) is in P.

PH is in P^#P^ [Tod89].

Any function in #P can be approximated to within a polynomial factor in BPP with NP oracle [Sto85].
== Relations ==
