
<<TableOfContents()>>



= PLS - Polynomial Local Search =

== Comments ==

The subclass of [[Class_TFNP|$\text{TFNP}$]] function problems that are guaranteed to have a solution because of the lemma that "every finite directed acyclic graph has a sink."



More precisely, for each input, there's a finite set of solutions (i.e. strings), and a polynomial-time algorithm that computes a cost for each solution, and a neighboring solution of lower cost provided that one exists.  Then the problem is to return any solution that has cost less than or equal to all of its neighbors.  (In other words, a local optimum.)



(Note: In the Zookeeper's humble opinion, [[Class_PLS|$\text{PLS}$]] should have been defined as follows: there exist polynomial-time algorithms that compute the cost of a solution, and the set of all neighbors of a given solution, not just a single solution of lower cost. Of course we'd require that every solution has only polynomially many neighbors.  The two definitions are not obviously equivalent, and it's conceivable that knowing all the neighbors would be helpful -- for example, in simulated annealing one sometimes makes uphill moves.)



(Note to Note: The equivalance of these classes was shown (though not stated explicitly) in Theorem 1 of [[ZooRefs#JPY88|[JPY88] ]].)



Defined in [[ZooRefs#JPY88|[JPY88] ]], [[ZooRefs#PY88|[PY88] ]].



There exists an oracle relative to which [[Class_PLS|$\text{PLS}$]] is not contained in [[Class_FBQP|$\text{FBQP}$]] [[ZooRefs#Aar03|[Aar03] ]].



Also, there exist oracles relative to which [[Class_PLS|$\text{PLS}$]] is not contained in [[Class_PPA|$\text{PPA}$]] [[ZooRefs#BM04|[BM04] ]], and [[Class_PPA|$\text{PPA}$]] and [[Class_PPP|$\text{PPP}$]] are not contained in [[Class_PLS|$\text{PLS}$]] [[ZooRefs#Mor01|[Mor01] ]].



Whether [[Class_PLS|$\text{PLS}$]] is not in [[Class_PPP|$\text{PPP}$]] relative to some oracle remains open.



[[ZooRefs#CT07|[CT07] ]] conjecture that if [[Class_PPAD|$\text{PPAD}$]] is in [[Class_P|$\text{P}$]], then [[Class_PLS|$\text{PLS}$]] is in [[Class_P|$\text{P}$]].
== Relations ==


== See Also ==
