
<<TableOfContents()>>



= #P - Sharp-P =

----
CategoryClassical 

== Description ==

{{{#!description

The class of function problems of the form "compute f(x)," where f is the number of accepting paths of an [[Class_NP|$\text{NP}$]] machine.}}}

== Complete Problem ==

{{{#!complete_problem

}}}

== Comments ==



The canonical #P-complete problem is #SAT: given a Boolean formula, compute how many satisfying assignments it has.



Defined in [[ZooRefs#Val79|[Val79] ]], where it was also shown that the problem of counting the number of perfect matchings in a bipartite graph (or equivalently, computing the permanent of a 0-1 matrix) is #P-complete.



What makes that interesting is that the associated decision problem (whether a bipartite graph has a perfect matching) is in [[Class_P|$\text{P}$]].



[[Class_PH|$\text{PH}$]] is in [[Class_PSharpP|$\text{P}^\text{#P}\text{}$]] [[ZooRefs#Tod89|[Tod89] ]].



Any function in [[Class_SharpP|$\text{#P}$]] can be approximated to within a polynomial factor in [[Class_BPP|$\text{BPP}$]] with [[Class_NP|$\text{NP}$]] oracle [[ZooRefs#Sto85|[Sto85] ]].
== Relations ==

{{{#!class_relations

}}}


== See Also ==
