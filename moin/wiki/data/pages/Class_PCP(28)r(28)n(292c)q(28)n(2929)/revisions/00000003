
<<TableOfContents()>>



= PCP(r(n),q(n)) - Probabilistically Checkable Proof =

----
CategoryClassical 

== Description ==

{{{#!description

The class of decision problems such that a "yes" answer can be verified by a probabilistically checkable proof, as follows.}}}

== Complete Problem ==

{{{#!complete_problem

}}}

== Comments ==



The verifier is a polynomial-time Turing machine with access to O(r(n)) uniformly random bits.  It has random access to a proof (which might be exponentially long), but can query only O(q(n)) bits of the proof.



Then we require the following:



If the answer is "yes," there exists a proof such that the verifier accepts with certainty.

If the answer is "no," then for all proofs the verifier rejects with probability at least 1/2 (over the choice of the O(r(n)) random bits).



Defined in [[ZooRefs#AS98|[AS98] ]].



By definition [[Class_NP|$\text{NP}$]] = PCP(0,poly(n)).



[[Class_MIP|$\text{MIP}$]] = PCP(poly(n),poly(n)).



PCP(r(n),q(n)) is contained in NTIME(2^O(r(n))^q(n) + poly(n)).



[[Class_NP|$\text{NP}$]] = PCP(log n, log n) [[ZooRefs#AS98|[AS98] ]].



In fact, [[Class_NP|$\text{NP}$]] = PCP(log n, 1) [[ZooRefs#ALM+98|[ALM+98] ]]!



On the other hand, if [[Class_NP|$\text{NP}$]] is contained in PCP(o(log n), o(log n)), then [[Class_P|$\text{P}$]] = [[Class_NP|$\text{NP}$]] [[ZooRefs#FGL+91|[FGL+91] ]].



Also, even though there exists an oracle relative to which [[Class_NP|$\text{NP}$]] = [[Class_EXP|$\text{EXP}$]] [[ZooRefs#Hel84|[Hel84] ]], if we could show there exists an oracle relative to which PCP(log n, 1) = [[Class_EXP|$\text{EXP}$]], then we'd have proved [[Class_P|$\text{P}$]] not equal to [[Class_NP|$\text{NP}$]] [[ZooRefs#For94|[For94] ]].



Another weird oracle fact: since [[Class_NP|$\text{NP}$]] does not equal [[Class_NEXP|$\text{NEXP}$]] [[ZooRefs#SFM78|[SFM78] ]], PCP(log n, log n) does not equal PCP(poly(n), poly(n)).  However, there exist oracles relative to which the latter inequality is false [[ZooRefs#HCC+92|[HCC+92] ]].



Another weird oracle fact: since [[Class_NP|$\text{NP}$]] does not equal [[Class_NEXP|$\text{NEXP}$]] [[ZooRefs#SFM78|[SFM78] ]], PCP(0,log n) does not equal PCP(0,poly(n)).  However, there exist oracles relative to which the latter inequality is false [[ZooRefs#HCC+92|[HCC+92] ]].
== Relations ==

{{{#!class_relations

}}}


== See Also ==

<<FullSearch(linkto:PCP(r(n),q(n)))>>
