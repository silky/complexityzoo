
<<TableOfContents()>>



= mP - Monotone P =

== Comments ==

The definition of this class, due to [[ZooRefs#GS90|[GS90] ]], is not obvious.  First, a monotone nondeterministic Turing machine is one such that, whenever it can make a transition with a 0 on its input tape, it can also make that same transition with a 1 on its input tape. (This restriction does not apply to the work tape.)  A monotone alternating Turing machine is subject to the restriction that it can only reference an input bit x by, "there exists a z at most x," or "for all z at least x."



Then applying the result of [[ZooRefs#CKS81|[CKS81] ]] that [[Class_P|$\text{P}$]] = [[Class_AL|$\text{AL}$]], [[Class_mP|$\text{mP}$]] is defined to be [[Class_mAL|$\text{mAL}$]]: the class of decision problems solvable by a monotone alternating log-space Turing machine.



Actually there's a caveat: A monotone Turing machine or circuit can first negate the entire input, then perform a monotone computation.  That way it becomes meaningful to talk about whether a monotone complexity class is closed under complement.



Strictly contained in [[Class_mNP|$\text{mNP}$]] [[ZooRefs#Raz85|[Raz85] ]].



Deciding whether a bipartite graph has a perfect matching, despite being both a monotone problem and in [[Class_P|$\text{P}$]], requires monotone circuits of superpolynomial size [Raz85b].  Letting MONO be the class of monotone problems, it follows that [[Class_mP|$\text{mP}$]] is strictly contained in MONO âˆ© [[Class_P|$\text{P}$]].



See also: [[Class_mNC1|$\text{mNC1}$]], [[Class_mL|$\text{mL}$]], [[Class_mNL|$\text{mNL}$]], [[Class_mcoNL|$\text{mcoNL}$]].
== Relations ==


== See Also ==
